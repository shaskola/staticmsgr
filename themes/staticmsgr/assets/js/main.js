// Log site initialization
console.log('%c🚀 MascotMessenger Initializing...', 'color: #E91E63; font-size: 16px; font-weight: bold;');

// Log environment info
console.log('%c📊 Environment Info:', 'color: #2196F3; font-weight: bold;', {
    url: window.location.href,
    path: window.location.pathname,
    hugo: 'This site was generated by Hugo'
});

// Function to log message data
function logMessageData(message) {
    if (!message) return;
    
    console.log('%c📝 Message Data:', 'color: #4CAF50; font-weight: bold;', {
        title: message.querySelector('h1')?.textContent,
        type: message.dataset.type,
        date: message.dataset.date,
        username: message.dataset.username,
        hasAvatar: !!message.querySelector('.avatar'),
        hasImage: !!message.querySelector('.message-image'),
        hasButtons: !!message.querySelector('.message-buttons')
    });
}

// Log all messages on the page
document.addEventListener('DOMContentLoaded', () => {
    console.log('%c🌐 Page Loaded', 'color: #9C27B0; font-weight: bold;');
    
    // Log page info
    console.log('%c📄 Page Info:', 'color: #FF9800; font-weight: bold;', {
        title: document.title,
        url: window.location.href,
        readyState: document.readyState
    });
    
    // Find and log all messages
    const messages = document.querySelectorAll('.message');
    console.log('%c📨 Found Messages:', 'color: #607D8B; font-weight: bold;', messages.length);
    
    messages.forEach((message, index) => {
        console.log(`%c📎 Message ${index + 1}:`, 'color: #795548; font-weight: bold;');
        logMessageData(message);
    });
});

// Log any errors
window.onerror = function(msg, url, lineNo, columnNo, error) {
    console.error('%c❌ Error:', 'color: #f44336; font-weight: bold;', {
        message: msg,
        url: url,
        line: lineNo,
        column: columnNo,
        error: error?.stack || error
    });
    return false;
};

// Log any resource loading errors
window.addEventListener('error', function(e) {
    if (e.target.tagName) {
        console.error('%c🚫 Resource Error:', 'color: #f44336; font-weight: bold;', {
            element: e.target.tagName.toLowerCase(),
            src: e.target.src || e.target.href,
            type: e.type
        });
    }
}, true);

// Log any unhandled promise rejections
window.addEventListener('unhandledrejection', function(e) {
    console.error('%c💥 Unhandled Promise Rejection:', 'color: #f44336; font-weight: bold;', {
        reason: e.reason
    });
});
